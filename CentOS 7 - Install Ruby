CentOS
root password: p@ssw0rd

[安裝Ruby]
1.  Installation of Rbenv
Rbenv is a ruby version management tool. We will use this to install and manage our Ruby installation.
1.1 Install Ruby dependencies
# yum install -y git-core zlib zlib-devel gcc-c++ patch readline readline-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison curl sqlite-devel
1.2. Install rbenv from git
# cd
# git clone git://github.com/sstephenson/rbenv.git .rbenv
# echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
# echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
# source ~/.bash_profile

# git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
# echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bash_profile
# source ~/.bash_profile

2.  Open new terminal

3.  Installation of Ruby
# rbenv install -v 2.2.1
3.1 設定 Ruby 使用版本
# rbenv global 2.2.1
3.2 Verify the installation
# ruby -v
3.3 Insert the following into your gemrc file to skip local installation of documentation for gems:
# echo "gem: --no-document" > ~/.gemrc
3.4 Install the bundler gem which is used to manage your application dependencies using the following commands.
# gem install bundler

4.  Installation of Rails
# gem install rails -v 4.2.0
4.1 We need to run rbenv rehash command whenever we use gem. to install/uninstall. The rbenv normally runs rbenv rehash automatically when you install/uninstall using gem. But to make sure, you may execute following command every time you use gem command.
# rbenv rehash
4.2 Verify the installation
# rails -v

Thus, we have completed the installation of Ruby on Rails.

[Other]
1. Install the nodejs runtime:
# sudo yum -y install epel-release
# sudo yum -y install nodejs

2. Configure the firewall
If this server is remote and not local, you'll need to allow tcp port 3000 through your firewall as this is the default port Rails uses:
# firewall-cmd --zone=public --add-port=3000/tcp --permanent
# firewall-cmd --reload

3. Create a Test Application
Create an application in your home directory as follows:
# cd ~
# rails new testapp
Now, move on to the application directory:
# cd testapp
Then, create a sqlite3 database:
# rake db:create
Thus the configuration has been completed. Now, you can start your application by following the commands. Look at the screenshot below.
# rails server --binding=192.168.0.103

Browser: http://192.168.0.103:3000/



資料來源：
https://syslint.com/blog/tutorial/how-to-install-ruby-on-rails-with-rbenv-on-centos-7-or-rhel-7/
http://jaspher.com/blog/centos-7-installing-ruby-rails